# Coolify-specific Docker Compose configuration
version: '3.8'

services:
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - video-editor
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 3s
      retries: 5

  app:
    image: ${DOCKER_IMAGE:-video-editor:latest}
    restart: unless-stopped
    ports:
      - "${PORT:-8000}:8000"
    environment:
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - ENVIRONMENT=${ENVIRONMENT:-production}
      - STORAGE_TYPE=${STORAGE_TYPE:-local}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-}
      - S3_BUCKET=${S3_BUCKET:-}
      - S3_ENDPOINT_URL=${S3_ENDPOINT_URL:-}
      - MAX_CONCURRENT_JOBS=${MAX_CONCURRENT_JOBS:-3}
      - JOB_EXPIRY_HOURS=${JOB_EXPIRY_HOURS:-24}
    volumes:
      - uploads:/app/uploads
      - outputs:/app/outputs
      - assets:/app/assets
      - temp:/app/temp
    networks:
      - video-editor
    depends_on:
      redis:
        condition: service_healthy
    labels:
      - "coolify.managed=true"
      - "coolify.version=4.0.0-beta.314"
      - "traefik.enable=true"
      - "traefik.http.routers.video-editor.rule=Host(`${FQDN}`)"
      - "traefik.http.routers.video-editor.entrypoints=websecure"
      - "traefik.http.routers.video-editor.tls.certresolver=letsencrypt"
      - "traefik.http.services.video-editor.loadbalancer.server.port=8000"

  worker:
    image: ${DOCKER_IMAGE:-video-editor:latest}
    restart: unless-stopped
    command: celery -A app.workers.celery_app worker --loglevel=info --concurrency=${MAX_CONCURRENT_JOBS:-3}
    environment:
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - ENVIRONMENT=${ENVIRONMENT:-production}
      - STORAGE_TYPE=${STORAGE_TYPE:-local}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-}
      - S3_BUCKET=${S3_BUCKET:-}
      - S3_ENDPOINT_URL=${S3_ENDPOINT_URL:-}
    volumes:
      - uploads:/app/uploads
      - outputs:/app/outputs
      - assets:/app/assets
      - temp:/app/temp
    networks:
      - video-editor
    depends_on:
      redis:
        condition: service_healthy
    labels:
      - "coolify.managed=true"

  beat:
    image: ${DOCKER_IMAGE:-video-editor:latest}
    restart: unless-stopped
    command: celery -A app.workers.celery_app beat --loglevel=info
    environment:
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    networks:
      - video-editor
    depends_on:
      redis:
        condition: service_healthy
    labels:
      - "coolify.managed=true"

volumes:
  redis_data:
  uploads:
  outputs:
  assets:
  temp:

networks:
  video-editor:
    driver: bridge